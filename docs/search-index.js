crystal_doc_search_index_callback({"repository_name":"github.com/lebogan/snob","body":"# snob (Snmp Network Object Browser)\n## Introduction\n***This utility is experimental, it will change radically as I learn more of the\nCrystal language, so use at your own risk!***\n\n**snob** is an attempt to rewrite my Ruby app [YASB](https://github.com/lebogan/yasb.git)\nin the Crystal programming language. The idea is to:\n\n- have a somewhat easily distributable utility for\nprobing network devices using snmpV3\n- share this utility with colleagues without them having to install some\ndevelopment environment\n- build fast performing apps\n- learn Crystal while leveraging my Ruby experience\n- have fun:)\n\nThis utility is written specifically for snmp version 3 because of\nits security features. Backwards compatibility to version 2c is not included\nat this time. Sorry:(.\n\nThe special *--list* switch is included to provide easily remembered names for\n1.0.8802.1.1.2.1.4.1.1.9 or ipNetToPhysicalPhysAddress or other cryptic looking\noids.\n\nThe output is raw by default. In addition, a --dump option is included for dumping\nthe resulting output to a file, raw_dump.txt, for later perusal. A --format option\nexists in an attempt to pretty-print the output for display on screen. The --only-values\nflag allows output to be used raw by another application like RRDTool for graphing \ntrends when you know which OID you want.\n\n## Installation\nYou need ___git___ to proceed. Get git! The install script can also update snob by\npulling a fresh copy from github. Check out install.sh to see what the script\nis doing. See README_UBUNTU.md for my tests on Ubuntu 14.04.\n\n```bash\n$ git clone https://github.com/lebogan/snob.git\n$ cd snob\n$ ./install.sh\n```\n> #### Installation on Ubuntu\n> see README_UBUNTU for details.\n\nRequired utilities for nms (network management station):  \n-  git  \n-  net-snmp  \n-  net-snmp-utils  \n\nConfigure your hosts to respond to snmp requests. See documentation at: \n[net-snmp](http://net-snmp.sourceforge.net/docs/README.snmpv3.html)\n\n## Usage\n```bash\n$ snob --help\nUsage: snob [OPTIONS] [HOST]\nBrowse a host snmpv3 mib tree.\n\nPrompts for HOST if not specified on the command-line. Also, prompts\nfor security credentials if HOST is not in the config file, ~/.snob/snobrc.yml.\n\n    -l, --list                       List some pre-defined OIDs\n    -m OID, --mib=OID                Display information for this oid\n                                     (Default: system)\n    -d, --dump                       Write output to file, raw only\n    -f, --formatted                  Display formatted output\n    -o, --only-values                Display values only (not OID = value)\n    -h, --help                       Show this help\n    -v, --version                    Show version\n\n$ snob --list\n===================================================================\nOIDS - Included pre-defined flag names\n-------------------------------------------------------------------\nflag name        |oid name\n=================+=================================================\narp              |ipNetToPhysicalPhysAddress\n-----------------+-------------------------------------------------\nlldp             |1.0.8802.1.1.2.1.4.1.1.9\n-----------------+-------------------------------------------------\nsys              |system\n-----------------+-------------------------------------------------\nmem              |memory\n-----------------+-------------------------------------------------\ndsk              |dskTable\n-----------------+-------------------------------------------------\nifdesc           |ifDescr\n-----------------+-------------------------------------------------\ndistro           |ucdavis.7890.1.4\n-----------------+-------------------------------------------------\ntemp             |lmTempSensorsDevice\n-----------------+-------------------------------------------------\n```\n## Config file\nA first run will create a default YAML config file named **~/.snob/snobrc.yml**\nif it doesn't already exist. The directory's permissions are set to 0o700\n(drwx------) for added security. The initial set of credentials is for a host named\n__dummy__. Afterwards, if the host is not in the config file, you will be asked\nto enter credentials manually with the option to save them.  \n```\n$ snob myserver\nConfig file doesn't exist. Create it? <yes>\nmyserver is not in config file. Configuring...\nEnter security name: <myname>\nEnter authentication phrase: <secret>\nEnter privacy phrase: <realsecret>\nCrypto algorithm [AES/DES]: <DES>\nYou entered: \nmyserver:\n  user: myname\n  auth: secret\n  priv: realsecret\n  crypto: DES\nSave this session? <yes>\n\n```\n\nThe config file is YAML format and can be edited manually.\n```text\n# /home/vagrant/.snob/snobrc.yml\n---\ndummy:\n  user: username\n  auth: auth passphrase\n  priv: priv passphrase\n  crypto: AES/DES\n\nmyserver:\n  user: myname\n  auth: secret\n  priv: realsecret\n  crypto: DES\n```\n\n## TODO\n- [ ] Bind the net-snmp c library to make this app even more portable.\n- [X] Build a Ubuntu test environment, write installation instructions.\n\n## Development\nPlease, see the DISCLAIMER below.  \nCheck out the repo on GitHub at https://github.com/lebogan/snob.git  \nDeveloped using Crystal 0.24.2 on Fedora 27 workstation running under Vagrant v2.0.2\nwith VirtualBox 5.2 provider.  \nTested on Fedora 26/27 and CentOS 7.  \nSee README_UBUNTU.md for my tests on Ubuntu 14.04.\n\n## Contributing\nPlease, see the DISCLAIMER below.\n\n1. Fork it ( https://github.com/[your-github-name]/snob/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n- [lebogan](https://github.com/lebogan/snob.git) - creator, maintainer\n\n## License\nThis utility is available as open source under the terms of the\n[MIT License](http://opensource.org/licenses/MIT).\n\n## Disclaimer\nThis utility was originally created for my personal use in my work as a network\nspecialist. It was developed on a Fedora Workstation using Crystal 0.24.2. This has\nonly been tested on Fedora 26/27 Workstation and CentOS 7 \n\nI am not a professional software developer nor do I pretend to be. I am a retired IT \nnetwork specialist and this is a hobby to keep me out of trouble. If you \nuse this application and it doesn't work the way you would want, feel free to \nfork it and modify it to your liking. Fork on GitHub at https://github.com/lebogan/snob.git\n","program":{"html_id":"github.com/lebogan/snob/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/lebogan/snob","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/lebogan/snob/App","path":"App.html","kind":"struct","full_name":"App","name":"App","abstract":false,"superclass":{"html_id":"github.com/lebogan/snob/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/lebogan/snob/Messages","kind":"module","full_name":"Messages","name":"Messages"},{"html_id":"github.com/lebogan/snob/Session","kind":"module","full_name":"Session","name":"Session"},{"html_id":"github.com/lebogan/snob/Config","kind":"module","full_name":"Config","name":"Config"},{"html_id":"github.com/lebogan/snob/Snmp","kind":"module","full_name":"Snmp","name":"Snmp"},{"html_id":"github.com/lebogan/snob/Utils","kind":"module","full_name":"Utils","name":"Utils"},{"html_id":"github.com/lebogan/snob/Reports","kind":"module","full_name":"Reports","name":"Reports"},{"html_id":"github.com/lebogan/snob/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/lebogan/snob/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/lebogan/snob/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"snob.cr","line_number":38,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONFIG_FILE","name":"CONFIG_FILE","value":"File.expand_path(\"#{CONFIG_PATH}/snobrc.yml\")","doc":null,"summary":null},{"id":"CONFIG_PATH","name":"CONFIG_PATH","value":"File.expand_path(\"~/.snob/\")","doc":null,"summary":null},{"id":"OIDLIST","name":"OIDLIST","value":"{arp: \"ipNetToPhysicalPhysAddress\", lldp: \"1.0.8802.1.1.2.1.4.1.1.9\", sys: \"system\", mem: \"memory\", dsk: \"dskTable\", ifdesc: \"ifDescr\", distro: \"ucdavis.7890.1.4\", temp: \"lmTempSensorsDevice\"}","doc":null,"summary":null},{"id":"OUT_FILE","name":"OUT_FILE","value":"File.expand_path(\"#{OUT_PATH}/raw_dump.txt\")","doc":null,"summary":null},{"id":"OUT_PATH","name":"OUT_PATH","value":"File.expand_path(\"~/tmp\")","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/lebogan/snob/Config","kind":"module","full_name":"Config","name":"Config"},{"html_id":"github.com/lebogan/snob/Messages","kind":"module","full_name":"Messages","name":"Messages"},{"html_id":"github.com/lebogan/snob/Reports","kind":"module","full_name":"Reports","name":"Reports"},{"html_id":"github.com/lebogan/snob/Session","kind":"module","full_name":"Session","name":"Session"},{"html_id":"github.com/lebogan/snob/Snmp","kind":"module","full_name":"Snmp","name":"Snmp"},{"html_id":"github.com/lebogan/snob/Utils","kind":"module","full_name":"Utils","name":"Utils"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"This struct contains the main application. It checks for command line arguments,\nvalid hostname, and snmpv3 credentials.\n\nWe have to rely on having net-snmp installed on our pc.\nTODO: Bind the net-snmp c library to make this app portable.\nTODO: Test, test, test!","summary":"<p>This struct contains the main application.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob.cr#L38","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob.cr#L38","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":"Runs the main application.","summary":"<p>Runs the main application.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob.cr#L62","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob.cr#L62","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"mib_oid = \"\"\ndisplay_formatted = false\nonly_values = false\nfile_write = false\nOptionParser.parse! do |parser|\n  parser.banner = banner_message\n  parser.on(\"-l\", \"--list\", \"List some pre-defined OIDs\") do\n    list_oids(OIDLIST)\n    exit(0)\n  end\n  parser.on(\"-m OID\", \"--mib=OID\", \"Display information for this oid\\n                                     (Default: system)\") do |oid|\n    mib_oid = case\n    when OIDLIST.has_key?(oid)\n      OIDLIST[\"#{oid}\"]\n    when !oid.empty?\n      oid\n    else\n      \"system\"\n    end\n  end\n  parser.on(\"-d\", \"--dump\", \"Write output to file, raw only\") do\n    file_write = true\n  end\n  parser.on(\"-f\", \"--formatted\", \"Display pretty formatted output\") do\n    display_formatted = true\n  end\n  parser.on(\"-o\", \"--only-values\", \"Display values only (not OID = value)\") do\n    only_values = true\n  end\n  parser.on(\"-h\", \"--help\", \"Show this help\") do\n    puts(parser)\n    exit(0)\n  end\n  parser.on(\"-v\", \"--version\", \"Show version\") do\n    puts(\"snob v#{Snob::VERSION}\")\n    exit(0)\n  end\n  parser.invalid_option do |flag|\n    abort(invalid_message(flag))\n  end\n  parser.missing_option do |flag|\n    abort(missing_message(flag))\n  end\nend\nhostname = process_argv(ARGV)\nstatus, result = run_cmd(\"ping\", {\"-c\", \"2\", \"#{hostname}\"})\nif status == 0\nelse\n  abort(ping_message(hostname))\nend\ncheck_for_config(CONFIG_PATH, CONFIG_FILE)\nif (File.exists?(CONFIG_FILE)) && ((fetch_config(CONFIG_FILE))[\"#{hostname}\"]? != nil)\n  config = (fetch_config(CONFIG_FILE))[\"#{hostname}\"]\nelse\n  puts(\"'#{hostname}' is not in config file.\")\n  print_chars('-', 40)\n  config = configure_session[0]\n  credentials = {hostname => config}.to_yaml.gsub(\"---\", \"\")\n  print_chars('-', 40)\n  puts(\"You entered: %s\" % credentials)\n  choice = agree?(\"Save these credentials(y/n)? \")\n  if choice\n    add_session(CONFIG_FILE, credentials)\n  end\nend\nif mib_oid.empty?\n  mib_oid = \"system\"\nend\nhost = Snmp.new(config[\"auth\"].to_s, config[\"priv\"].to_s, config[\"user\"].to_s, config[\"crypto\"].to_s.upcase)\nformat = only_values ? \"vq\" : \"QUsT\"\nstatus, results = host.walk_mib3(hostname, mib_oid, format)\nif status == 0\nelse\n  abort(snmp_message(hostname, mib_oid))\nend\nif display_formatted\n  clear_screen\n  say_hey(hostname)\n  table = {} of String => String\n  format_table(results.split(\"\\n\"), table)\n  display_table(table, hostname, mib_oid)\nelse\n  if file_write\n    if Dir.exists?(OUT_PATH)\n    else\n      Dir.mkdir_p(OUT_PATH)\n    end\n    write_file(OUT_FILE, results)\n  end\n  display_raw_table(results.split(\"\\n\"))\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/lebogan/snob/Config","path":"Config.html","kind":"module","full_name":"Config","name":"Config","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"snob/config.cr","line_number":15,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/config.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/lebogan/snob/Config","kind":"module","full_name":"Config","name":"Config"}],"subclasses":[],"including_types":[{"html_id":"github.com/lebogan/snob/App","kind":"struct","full_name":"App","name":"App"}],"namespace":null,"doc":"Defines configuration file methods. **extend self** allows these\nmethods to be included in a program (class) and invoked without a namespace\nor just used as a namespace.","summary":"<p>Defines configuration file methods.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"build_config_file(config_file:String,conf:Hash)-instance-method","html_id":"build_config_file(config_file:String,conf:Hash)-instance-method","name":"build_config_file","doc":"Creates a new config file.","summary":"<p>Creates a new config file.</p>","abstract":false,"args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"},{"name":"conf","doc":null,"default_value":"","external_name":"conf","restriction":"Hash"}],"args_string":"(config_file : String, conf : Hash)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/config.cr#L31","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/config.cr#L31","def":{"name":"build_config_file","args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"},{"name":"conf","doc":null,"default_value":"","external_name":"conf","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(config_file, \"w\") do |file|\n  file.puts(\"# #{config_file}\")\n  YAML.dump(conf, file)\nend"}},{"id":"check_for_config(config_path:String,config_file:String)-instance-method","html_id":"check_for_config(config_path:String,config_file:String)-instance-method","name":"check_for_config","doc":"Checks for existance of a config file and creates a dummy entry\n   if the user answers yes.","summary":"<p>Checks for existance of a config file and creates a dummy entry    if the user answers yes.</p>","abstract":false,"args":[{"name":"config_path","doc":null,"default_value":"","external_name":"config_path","restriction":"String"},{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"}],"args_string":"(config_path : String, config_file : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/config.cr#L20","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/config.cr#L20","def":{"name":"check_for_config","args":[{"name":"config_path","doc":null,"default_value":"","external_name":"config_path","restriction":"String"},{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if File.exists?(config_file)\nelse\n  Dir.mkdir_p(config_path, 448)\n  conf = {\"dummy\" => {\"user\" => \"username\", \"auth\" => \"auth passphrase\", \"priv\" => \"priv passphrase\", \"crypto\" => \"AES/DES\"}}\n  choice = agree?(\"Config file doesn't exist. Create it(y/n)? \")\n  if choice\n    build_config_file(config_file, conf)\n  end\nend"}},{"id":"fetch_config(config_file:String):YAML::Any-instance-method","html_id":"fetch_config(config_file:String):YAML::Any-instance-method","name":"fetch_config","doc":"Parses a YAML configuration file.","summary":"<p>Parses a YAML configuration file.</p>","abstract":false,"args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"}],"args_string":"(config_file : String) : YAML::Any","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/config.cr#L39","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/config.cr#L39","def":{"name":"fetch_config","args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"YAML::Any","visibility":"Public","body":"YAML.parse(File.read(config_file))"}}],"macros":[],"types":[]},{"html_id":"github.com/lebogan/snob/Messages","path":"Messages.html","kind":"module","full_name":"Messages","name":"Messages","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"snob/messages.cr","line_number":13,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/lebogan/snob/Messages","kind":"module","full_name":"Messages","name":"Messages"}],"subclasses":[],"including_types":[{"html_id":"github.com/lebogan/snob/App","kind":"struct","full_name":"App","name":"App"}],"namespace":null,"doc":"Error and other messages.","summary":"<p>Error and other messages.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"banner_message-instance-method","html_id":"banner_message-instance-method","name":"banner_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L16","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L16","def":{"name":"banner_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Usage: snob [OPTIONS] [HOST]\\nBrowse a host's snmpv3 mib tree.\\n\\nPrompts for HOST if not specified on the command-line. Also, prompts\\nfor security credentials if HOST is not in the config file, snobrc.yml.\\n\""}},{"id":"blank_host_message-instance-method","html_id":"blank_host_message-instance-method","name":"blank_host_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L33","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L33","def":{"name":"blank_host_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"snob: hostname can not be blank\""}},{"id":"invalid_message(flag:String)-instance-method","html_id":"invalid_message(flag:String)-instance-method","name":"invalid_message","doc":null,"summary":null,"abstract":false,"args":[{"name":"flag","doc":null,"default_value":"","external_name":"flag","restriction":"String"}],"args_string":"(flag : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L58","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L58","def":{"name":"invalid_message","args":[{"name":"flag","doc":null,"default_value":"","external_name":"flag","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"snob: invalid option -- '#{flag}'\\nTry 'snob --help' for more information.\""}},{"id":"missing_message(flag:String)-instance-method","html_id":"missing_message(flag:String)-instance-method","name":"missing_message","doc":null,"summary":null,"abstract":false,"args":[{"name":"flag","doc":null,"default_value":"","external_name":"flag","restriction":"String"}],"args_string":"(flag : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L51","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L51","def":{"name":"missing_message","args":[{"name":"flag","doc":null,"default_value":"","external_name":"flag","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Missing option argument: #{flag} OID\\nExample: snob -m lldp hostname\""}},{"id":"ping_message(hostname:String)-instance-method","html_id":"ping_message(hostname:String)-instance-method","name":"ping_message","doc":null,"summary":null,"abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"args_string":"(hostname : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L27","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L27","def":{"name":"ping_message","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"ping: #{hostname} is unreachable on this network\""}},{"id":"snmp_message(hostname:String,mib_oid:String)-instance-method","html_id":"snmp_message(hostname:String,mib_oid:String)-instance-method","name":"snmp_message","doc":null,"summary":null,"abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"mib_oid","doc":null,"default_value":"","external_name":"mib_oid","restriction":"String"}],"args_string":"(hostname : String, mib_oid : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L39","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/messages.cr#L39","def":{"name":"snmp_message","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"mib_oid","doc":null,"default_value":"","external_name":"mib_oid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Error: cannot process this request because:\\n1. net-snmp-utils not installed or\\n2. host '#{hostname}' not snmpv3 enabled or\\n3. incorrect credentials used or\\n4. communication not permitted from this host or\\n5. unknown object identifier: '#{mib_oid}'.\\nTry 'snob --help' for more information.\""}}],"macros":[],"types":[]},{"html_id":"github.com/lebogan/snob/Object","path":"Object.html","kind":"class","full_name":"Object","name":"Object","abstract":true,"superclass":null,"ancestors":[],"locations":[{"filename":"snob.cr","line_number":26,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Allows displaying object methods during development.","summary":"<p>Allows displaying object methods during development.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"methods-macro","html_id":"methods-macro","name":"methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob.cr#L27","def":{"name":"methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{{ @type.methods.map do |__arg0|\n  __arg0.name.stringify\nend }}\n\n  \n"}}],"types":[]},{"html_id":"github.com/lebogan/snob/Reports","path":"Reports.html","kind":"module","full_name":"Reports","name":"Reports","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"snob/reports.cr","line_number":13,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/lebogan/snob/App","kind":"struct","full_name":"App","name":"App"}],"namespace":null,"doc":"Displays the results of a snmpwalk operation either raw or formatted.","summary":"<p>Displays the results of a snmpwalk operation either raw or formatted.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"display_header(hostname:String,header:Tuple,oid:String)-instance-method","html_id":"display_header(hostname:String,header:Tuple,oid:String)-instance-method","name":"display_header","doc":"Displays the report header.","summary":"<p>Displays the report header.</p>","abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"Tuple"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"args_string":"(hostname : String, header : Tuple, oid : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L31","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L31","def":{"name":"display_header","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"Tuple"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(\"===================================================================\")\nputs(\"#{hostname.upcase} - #{oid}\")\nputs(\"-------------------------------------------------------------------\")\nprintf(\"%-16s |%s\\n\", header[0], header[1])\nputs(\"=================+=================================================\")\n"}},{"id":"display_raw_table(table:Array(String))-instance-method","html_id":"display_raw_table(table:Array(String))-instance-method","name":"display_raw_table","doc":"Displays the raw unformatted snmpwalk results.","summary":"<p>Displays the raw unformatted snmpwalk results.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Array(String)"}],"args_string":"(table : Array(String))","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L83","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L83","def":{"name":"display_raw_table","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"page_size = 30\npage_count = 1\ntable.each do |line|\n  puts(line)\n  page_count = page_count + 1\n  if (page_count % page_size) == 0\n    choice = ask_char(\"\\n -- press any key to continue or q to quit --  \")\n    choice == 'q' ? break : next\n  end\nend\nputs(\"\\n\\n\")\n"}},{"id":"display_table(formatted_table:Hash,hostname:String,oid:String)-instance-method","html_id":"display_table(formatted_table:Hash,hostname:String,oid:String)-instance-method","name":"display_table","doc":"Displays header and formatted table information.","summary":"<p>Displays header and formatted table information.</p>","abstract":false,"args":[{"name":"formatted_table","doc":null,"default_value":"","external_name":"formatted_table","restriction":"Hash"},{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"args_string":"(formatted_table : Hash, hostname : String, oid : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L76","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L76","def":{"name":"display_table","args":[{"name":"formatted_table","doc":null,"default_value":"","external_name":"formatted_table","restriction":"Hash"},{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"header = format_header(oid)\ndisplay_header(hostname, header, oid)\ndisplay_table_info(formatted_table)\n"}},{"id":"display_table_info(formatted_table:Hash|NamedTuple)-instance-method","html_id":"display_table_info(formatted_table:Hash|NamedTuple)-instance-method","name":"display_table_info","doc":"Displays the table information.","summary":"<p>Displays the table information.</p>","abstract":false,"args":[{"name":"formatted_table","doc":null,"default_value":"","external_name":"formatted_table","restriction":"Hash | NamedTuple"}],"args_string":"(formatted_table : Hash | NamedTuple)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L15","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L15","def":{"name":"display_table_info","args":[{"name":"formatted_table","doc":null,"default_value":"","external_name":"formatted_table","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"page_size = 15\npage_count = 1\nformatted_table.each do |label, info|\n  printf(\"%-16s |%s\\n\", label, info.delete(\"\\\"\"))\n  puts(\"-----------------+-------------------------------------------------\")\n  page_count = page_count + 1\n  if (page_count % page_size) == 0\n    choice = ask_char(\"\\n -- press any key to continue or q to quit --  \")\n    choice == 'q' ? break : next\n  end\nend\nputs(\"\\n\\n\")\n"}},{"id":"format_header(oid:String):Tuple(String,String)-instance-method","html_id":"format_header(oid:String):Tuple(String,String)-instance-method","name":"format_header","doc":"Formats the appropriate oid header.","summary":"<p>Formats the appropriate oid header.</p>","abstract":false,"args":[{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"args_string":"(oid : String) : Tuple(String, String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L64","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L64","def":{"name":"format_header","args":[{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(String, String)","visibility":"Public","body":"case\nwhen oid.includes?(\"1.0.8802.1.1.2.1.4.1.1.9\")\n  {\"port.instance\", \"remote host\"}\nwhen oid.includes?(\"ipNetToPhysicalPhysAddress\")\n  {\"ip address\", \"mac address\"}\nelse\n  {\"oid\", \"description\"}\nend"}},{"id":"format_label(entry:String):String-instance-method","html_id":"format_label(entry:String):String-instance-method","name":"format_label","doc":"Formats the label depending on which oid it represents.","summary":"<p>Formats the label depending on which oid it represents.</p>","abstract":false,"args":[{"name":"entry","doc":null,"default_value":"","external_name":"entry","restriction":"String"}],"args_string":"(entry : String) : String","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L40","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L40","def":{"name":"format_label","args":[{"name":"entry","doc":null,"default_value":"","external_name":"entry","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case\nwhen ((entry.split(/=/))[0].split(/\\\"/))[0].includes?(\"ipNetToPhysicalPhysAddress\")\n  label = ((entry.split(/=/))[0].split(/\\\"/))[-2].to_s\nwhen ((entry.split(/=/))[0].split(/\\\"/))[0].includes?(\"iso\")\n  label = ((((entry.split(/=/))[0].split(/\\\"/))[0].split(/\\./))[-2..-1].join(\".\")).to_s\nelse\n  label = ((entry.split(/=/))[0].split(/\\\"/))[0].to_s\nend"}},{"id":"format_table(results:Array,table:Hash):Hash(String,String)-instance-method","html_id":"format_table(results:Array,table:Hash):Hash(String,String)-instance-method","name":"format_table","doc":"Formats the table into label and info.","summary":"<p>Formats the table into label and info.</p>","abstract":false,"args":[{"name":"results","doc":null,"default_value":"","external_name":"results","restriction":"Array"},{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Hash"}],"args_string":"(results : Array, table : Hash) : Hash(String, String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L52","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L52","def":{"name":"format_table","args":[{"name":"results","doc":null,"default_value":"","external_name":"results","restriction":"Array"},{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"results.each do |entry|\n  if (entry.split(/=/)).size > 1\n    label = format_label(entry)\n    info = (truncate((entry.split(/=/))[1])).to_s\n    table[label] = info\n  end\nend\ntable\n"}},{"id":"list_oids(list:NamedTuple)-instance-method","html_id":"list_oids(list:NamedTuple)-instance-method","name":"list_oids","doc":"Lists some useful difficult-to-remember oids.\n\n```text\n===================================================================\nOIDS - Included pre-defined object identifiers\n-------------------------------------------------------------------\nname             |object identifier\n=================+=================================================\narp              |ipNetToPhysicalPhysAddress\n-----------------+-------------------------------------------------\nlldp             |1.0.8802.1.1.2.1.4.1.1.9\n-----------------+-------------------------------------------------\n```","summary":"<p>Lists some useful difficult-to-remember oids.</p>","abstract":false,"args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"NamedTuple"}],"args_string":"(list : NamedTuple)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L110","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/reports.cr#L110","def":{"name":"list_oids","args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clear_screen\nheader = {\"name\", \"object identifier\"}\ndisplay_header(\"OIDs\", header, \"Included pre-defined object identifiers\")\ndisplay_table_info(list)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/lebogan/snob/Session","path":"Session.html","kind":"module","full_name":"Session","name":"Session","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"snob/session.cr","line_number":15,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/session.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/lebogan/snob/Session","kind":"module","full_name":"Session","name":"Session"}],"subclasses":[],"including_types":[{"html_id":"github.com/lebogan/snob/App","kind":"struct","full_name":"App","name":"App"}],"namespace":null,"doc":"Defines session methods. **extend self** allows these\nmethods to be included in a program (class) and invoked without a namespace\nor just used as a namespace.","summary":"<p>Defines session methods.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_session(config_file:String,credentials:String)-instance-method","html_id":"add_session(config_file:String,credentials:String)-instance-method","name":"add_session","doc":"Adds new session _credentials_ to config file.","summary":"<p>Adds new session <em>credentials</em> to config file.</p>","abstract":false,"args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"},{"name":"credentials","doc":null,"default_value":"","external_name":"credentials","restriction":"String"}],"args_string":"(config_file : String, credentials : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/session.cr#L19","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/session.cr#L19","def":{"name":"add_session","args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"},{"name":"credentials","doc":null,"default_value":"","external_name":"credentials","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(config_file, \"a\") do |file|\n  file.puts(credentials)\nend"}},{"id":"configure_session:Tuple(Hash(String,String))-instance-method","html_id":"configure_session:Tuple(Hash(String,String))-instance-method","name":"configure_session","doc":"Prompts the user for host credentials. This method is typically invoked\nwhen the credentials are not in the configuration file.","summary":"<p>Prompts the user for host credentials.</p>","abstract":false,"args":[],"args_string":" : Tuple(Hash(String, String))","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/session.cr#L27","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/session.cr#L27","def":{"name":"configure_session","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Hash(String, String))","visibility":"Public","body":"conf = {} of String => String\nconf[\"user\"] = ask(\"Enter security name: \")\nconf[\"auth\"] = Secrets.gets(prompt: \"Enter authentication phrase: \")\nconf[\"priv\"] = Secrets.gets(prompt: \"Enter privacy phrase: \")\nconf[\"crypto\"] = (ask(\"Crypto algorithm [AES/DES]: \")).upcase\n{conf}\n"}}],"macros":[],"types":[]},{"html_id":"github.com/lebogan/snob/Snmp","path":"Snmp.html","kind":"module","full_name":"Snmp","name":"Snmp","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"snob/snmp.cr","line_number":15,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/lebogan/snob/App","kind":"struct","full_name":"App","name":"App"}],"namespace":null,"doc":"Defines the Snmp object and forms the **walk_mib3** command string.","summary":"<p>Defines the Snmp object and forms the <strong>walk_mib3</strong> command string.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/lebogan/snob/Snmp/Snmp","path":"Snmp/Snmp.html","kind":"struct","full_name":"Snmp::Snmp","name":"Snmp","abstract":false,"superclass":{"html_id":"github.com/lebogan/snob/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/lebogan/snob/Utils","kind":"module","full_name":"Utils","name":"Utils"},{"html_id":"github.com/lebogan/snob/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/lebogan/snob/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/lebogan/snob/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"snob/snmp.cr","line_number":16,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/lebogan/snob/Utils","kind":"module","full_name":"Utils","name":"Utils"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/lebogan/snob/Snmp","kind":"module","full_name":"Snmp","name":"Snmp"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(auth:String,priv:String,user:String,crypto:String)-class-method","html_id":"new(auth:String,priv:String,user:String,crypto:String)-class-method","name":"new","doc":"Creates a new Snmp object.\n\n```\nSnmp.new(args...) # => Snmp\n```\n","summary":"<p>Creates a new Snmp object.</p>","abstract":false,"args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"String"},{"name":"priv","doc":null,"default_value":"","external_name":"priv","restriction":"String"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":"String"}],"args_string":"(auth : String, priv : String, user : String, crypto : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L26","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L26","def":{"name":"new","args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"String"},{"name":"priv","doc":null,"default_value":"","external_name":"priv","restriction":"String"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(auth, priv, user, crypto)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"auth:String-instance-method","html_id":"auth:String-instance-method","name":"auth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","def":{"name":"auth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth"}},{"id":"auth=(auth)-instance-method","html_id":"auth=(auth)-instance-method","name":"auth=","doc":null,"summary":null,"abstract":false,"args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":""}],"args_string":"(auth)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","def":{"name":"auth=","args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth = auth"}},{"id":"crypto:String-instance-method","html_id":"crypto:String-instance-method","name":"crypto","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","def":{"name":"crypto","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crypto"}},{"id":"crypto=(crypto)-instance-method","html_id":"crypto=(crypto)-instance-method","name":"crypto=","doc":null,"summary":null,"abstract":false,"args":[{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":""}],"args_string":"(crypto)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","def":{"name":"crypto=","args":[{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crypto = crypto"}},{"id":"priv:String-instance-method","html_id":"priv:String-instance-method","name":"priv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","def":{"name":"priv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@priv"}},{"id":"priv=(priv)-instance-method","html_id":"priv=(priv)-instance-method","name":"priv=","doc":null,"summary":null,"abstract":false,"args":[{"name":"priv","doc":null,"default_value":"","external_name":"priv","restriction":""}],"args_string":"(priv)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","def":{"name":"priv=","args":[{"name":"priv","doc":null,"default_value":"","external_name":"priv","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@priv = priv"}},{"id":"user:String-instance-method","html_id":"user:String-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(user)-instance-method","html_id":"user=(user)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"args_string":"(user)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L18","def":{"name":"user=","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = user"}},{"id":"walk_mib3(hostname:String,oid:String,format:String):Tuple(Int32,String)-instance-method","html_id":"walk_mib3(hostname:String,oid:String,format:String):Tuple(Int32,String)-instance-method","name":"walk_mib3","doc":"Walks the mib tree.","summary":"<p>Walks the mib tree.</p>","abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"args_string":"(hostname : String, oid : String, format : String) : Tuple(Int32, String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L34","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/snmp.cr#L34","def":{"name":"walk_mib3","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, String)","visibility":"Public","body":"run_cmd(\"snmpwalk\", {\"-v3\", \"-u\", \"#{@user}\", \"-O#{format}\", \"-l\", \"authpriv\", \"-a\", \"MD5\", \"-A\", \"#{@auth}\", \"-x\", \"#{@crypto}\", \"-X\", \"#{@priv}\", \"#{hostname}\", \"#{oid}\"})"}}],"macros":[],"types":[]}]},{"html_id":"github.com/lebogan/snob/Snob","path":"Snob.html","kind":"module","full_name":"Snob","name":"Snob","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"snob/version.cr","line_number":1,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/version.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"{{ (`shards version /vagrant/Projects/crystal/production/snob/src/snob`).chomp.stringify }}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/lebogan/snob/Utils","path":"Utils.html","kind":"module","full_name":"Utils","name":"Utils","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"snob/utils.cr","line_number":15,"url":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr"}],"repository_name":"github.com/lebogan/snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/lebogan/snob/Utils","kind":"module","full_name":"Utils","name":"Utils"}],"subclasses":[],"including_types":[{"html_id":"github.com/lebogan/snob/App","kind":"struct","full_name":"App","name":"App"},{"html_id":"github.com/lebogan/snob/Snmp/Snmp","kind":"struct","full_name":"Snmp::Snmp","name":"Snmp"}],"namespace":null,"doc":"Defines general program utility methods. **extend self** allows these\nmethods to be included in a program (class) and invoked without a namespace\nor just used as a namespace.","summary":"<p>Defines general program utility methods.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"agree?(*args):Bool-instance-method","html_id":"agree?(*args):Bool-instance-method","name":"agree?","doc":"Prompts for an agreement in the form (y/n) or whatever else. Any\nanswer starting with 'y' or 'Y' is evaluated true. Anything else\nis false.\n\n```\nUtils.agree?(\"Are you sure(y/n)?: \") # => true | false\n```\n\n```text\n$ Are you sure(y/n)?: _\n```\n","summary":"<p>Prompts for an agreement in the form (y/n) or whatever else.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args) : Bool","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L124","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L124","def":{"name":"agree?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"prompt_msg(args)\ngets =~ (/^y/i) ? true : false\n"}},{"id":"ask(*args):String-instance-method","html_id":"ask(*args):String-instance-method","name":"ask","doc":"Prompts for user input displaying the passed prompt in _args_.\n\n```\nUtils.ask(\"Enter something: \") # => \"whatever you entered\"\n```\n\n```text\n$ Enter something: _\n```\n","summary":"<p>Prompts for user input displaying the passed prompt in <em>args</em>.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args) : String","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L73","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L73","def":{"name":"ask","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"prompt_msg(args)\ngets.to_s\n"}},{"id":"ask_char(*args):Char?-instance-method","html_id":"ask_char(*args):Char?-instance-method","name":"ask_char","doc":"Gets a single character (no newline) for use in paging long displays\nand other single character prompts.\n\n```\nUtils.ask_char(\"press 'q' to quit \") # => 'q'\n```\n\n```text\n$ press 'q' to quit _\n```\n\nNOTE: see Reports.display_table_info for usage.","summary":"<p>Gets a single character (no newline) for use in paging long displays and other single character prompts.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args) : Char?","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L107","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L107","def":{"name":"ask_char","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Char | ::Nil","visibility":"Public","body":"prompt_msg(args)\nSTDIN.raw(&.read_char)\n"}},{"id":"askpass(*args):Tuple(String?)-instance-method","html_id":"askpass(*args):Tuple(String?)-instance-method","name":"askpass","doc":"Gets passphrase without echoing it to the screen.\n\n```\nQuestion.ask_pass(\"Enter passphrase: \") # => Tuple(String?)\n```\n\n```text\n$ Enter passphrase: _ <no echo>\n```\n","summary":"<p>Gets passphrase without echoing it to the screen.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args) : Tuple(String?)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L88","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L88","def":{"name":"askpass","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Tuple(String | ::Nil)","visibility":"Public","body":"prompt_msg(args)\npassphrase = STDIN.noecho do |__arg0|\n  __arg0.gets.try(&.chomp)\nend\nputs\n{passphrase}\n"}},{"id":"clear_screen-instance-method","html_id":"clear_screen-instance-method","name":"clear_screen","doc":"Clears the screen using ansi codes.\n\n```text\n\\e[ is the escape code\n2J clears the screen\n1;1H moves cursor to line 1, column 1\n```\n\n```text\nclear_screen # => \"\\e[2J\\e[1;1H]]\"\n```\n","summary":"<p>Clears the screen using ansi codes.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L59","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L59","def":{"name":"clear_screen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(IO::Memory.new << \"\\e[2J\\e[1;1H\")"}},{"id":"print_chars(character:Char,number:Int32=20)-instance-method","html_id":"print_chars(character:Char,number:Int32=20)-instance-method","name":"print_chars","doc":"Prints a line of characters for display, defaults to 20.\n\n```\nUtils.print_chars('*', 10) # => \"----------\"\n```\n","summary":"<p>Prints a line of characters for display, defaults to 20.</p>","abstract":false,"args":[{"name":"character","doc":null,"default_value":"","external_name":"character","restriction":"Char"},{"name":"number","doc":null,"default_value":"20","external_name":"number","restriction":"Int32"}],"args_string":"(character : Char, number : Int32 = <span class=\"n\">20</span>)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L187","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L187","def":{"name":"print_chars","args":[{"name":"character","doc":null,"default_value":"","external_name":"character","restriction":"Char"},{"name":"number","doc":null,"default_value":"20","external_name":"number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts((\"%s\" % character) * number)"}},{"id":"process_argv(argv):String-instance-method","html_id":"process_argv(argv):String-instance-method","name":"process_argv","doc":"Checks for hostname in ARGV\n\n```\nUtils.process_argv(\"myhost\") # => \"myhost\"\n```\n","summary":"<p>Checks for hostname in ARGV</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":""}],"args_string":"(argv) : String","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L171","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L171","def":{"name":"process_argv","args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if argv.empty?\n  hostname = ask(\"Enter hostname: \")\n  if hostname.blank?\n    abort(blank_host_message)\n  end\n  hostname\nelse\n  argv[0]\nend"}},{"id":"read_file(filename:String)-instance-method","html_id":"read_file(filename:String)-instance-method","name":"read_file","doc":"Reads _filename_.","summary":"<p>Reads <em>filename</em>.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L143","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L143","def":{"name":"read_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = File.read_lines(filename)\nresult\n"}},{"id":"run_cmd(cmd:String,args:Tuple={&quot;&quot;}):Tuple(Int32,String)-instance-method","html_id":"run_cmd(cmd:String,args:Tuple={&amp;quot;&amp;quot;}):Tuple(Int32,String)-instance-method","name":"run_cmd","doc":"Runs a system-level command and returns a Tuple(Int32, String) containing\nstatus, and command output or error.\n\n```\nstatus, result = Utils.run_cmd(\"ls\", {\"-ls\"}) # => 0, listing\n```\n","summary":"<p>Runs a system-level command and returns a Tuple(Int32, String) containing status, and command output or error.</p>","abstract":false,"args":[{"name":"cmd","doc":null,"default_value":"","external_name":"cmd","restriction":"String"},{"name":"args","doc":null,"default_value":"{\"\"}","external_name":"args","restriction":"Tuple"}],"args_string":"(cmd : String, args : Tuple = {<span class=\"s\">&quot;&quot;</span>}) : Tuple(Int32, String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L36","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L36","def":{"name":"run_cmd","args":[{"name":"cmd","doc":null,"default_value":"","external_name":"cmd","restriction":"String"},{"name":"args","doc":null,"default_value":"{\"\"}","external_name":"args","restriction":"Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, String)","visibility":"Public","body":"stdout_str = IO::Memory.new\nstderr_str = IO::Memory.new\nstatus = Process.run(cmd, args: args, output: stdout_str, error: stderr_str)\nif status.success?\n  {status.exit_code, stdout_str.to_s}\nelse\n  {status.exit_code, stderr_str.to_s}\nend\n"}},{"id":"say_hey(hostname:String)-instance-method","html_id":"say_hey(hostname:String)-instance-method","name":"say_hey","doc":"Says hello to _hostname_.\n\n```\nUtils.say_hey(\"myserver\") # => \"Hey, myserver!\"\n```\n","summary":"<p>Says hello to <em>hostname</em>.</p>","abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"args_string":"(hostname : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L161","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L161","def":{"name":"say_hey","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(\"Hey #{hostname}!\")"}},{"id":"truncate(text:String,length=48,truncate_string=&quot;...&quot;):String-instance-method","html_id":"truncate(text:String,length=48,truncate_string=&amp;quot;...&amp;quot;):String-instance-method","name":"truncate","doc":"Truncates a _text_ string longer than _length_ characters and prints\na _truncate_ _string_ (defaults to '...') in place of the removed text.\nDefaults to # 48 characters.\n\n```\nUtils.truncate(\"hello, world\", 10, \"...\") # => hello, ...\n```\n","summary":"<p>Truncates a <em>text</em> string longer than <em>length</em> characters and prints a <em>truncate</em> <em>string</em> (defaults to '...') in place of the removed text.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"48","external_name":"length","restriction":""},{"name":"truncate_string","doc":null,"default_value":"\"...\"","external_name":"truncate_string","restriction":""}],"args_string":"(text : String, length = <span class=\"n\">48</span>, truncate_string = <span class=\"s\">&quot;...&quot;</span>) : String","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L137","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L137","def":{"name":"truncate","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"48","external_name":"length","restriction":""},{"name":"truncate_string","doc":null,"default_value":"\"...\"","external_name":"truncate_string","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"l = length - truncate_string.size\ntext.size > length ? (text[0...l] + truncate_string) : text\n"}},{"id":"write_file(filename:String,content:String)-instance-method","html_id":"write_file(filename:String,content:String)-instance-method","name":"write_file","doc":"Opens _filename_ for writing. Creates it if it doesn't exist. Overwrites _content_.","summary":"<p>Opens <em>filename</em> for writing.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"args_string":"(filename : String, content : String)","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L149","source_link":"https://github.com/lebogan/snob/blob/56c1d7635f208c7906a677d934f69a25552fbf7b/src/snob/utils.cr#L149","def":{"name":"write_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(filename, \"w\") do |file|\n  file.puts(content)\nend"}}],"macros":[],"types":[]}]}})