{"repository_name":"snob","body":"# snob (Snmp Network Object Browser)\n## Introduction\n***This utility is experimental, it will change radically as I learn more of the\nCrystal language, so use at your own risk! There will be warts!***  \n\n[Please, see the DISCLAIMER below](#disclaimer)\n\n**snob** is a rewrite of my Ruby app [YASB](https://github.com/lebogan/yasb.git)\nin the Crystal programming language. It's basically a wrapper around snmpwalk. The idea is to:\n\n- have a somewhat easily distributable utility for\nprobing network devices using snmpV3\n- share this utility with colleagues without them having to install some\ndevelopment environment\n- build fast performing apps\n- learn Crystal while leveraging my Ruby experience\n- have fun:)\n\nThis utility is written specifically for snmp version 3 because of\nits security features. Backwards compatibility to version 2c is not included\nat this time. Sorry:(.\n\nThe special *--list* switch is included to provide easily remembered names for\n1.0.8802.1.1.2.1.4.1.1.9 or ipNetToPhysicalPhysAddress or other cryptic looking\noids.\n\nThe output is raw by default. In addition, a --dump option is included for dumping\nthe resulting output to a file, raw_dump.txt, for later perusal. A --format option\nexists in an attempt to pretty-print the output for display on screen. The --only-values\nflag allows output to be used raw by another application like RRDTool for graphing \ntrends when you know which OID you want.\n\n## Installation\nThis covers Ubuntu (14 - 20). See notes below for other distros.  \n\n### Required\nRequired utilities for nms (network management station):  \n- git  \n- Install Crystal from the website, [crystal-lang](https://crystal-lang.org/docs/installation),\nto build the utility from source.  \n- snmp  \n- snmp-mibs-downloader  \n\n### Snmp configuration\nThere is an excellant write up on snmp by Justin Ellingwood and Vadym Kalsin on the DigitalOcean website \n[here](https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-an-snmp-daemon-and-client-on-ubuntu-18-04\n). They show how to configure a server and clients.  \n\nYou need the snmp-mibs-downloader so you can refer to \nmibs by colorful names like ___system___ instead of 1.3.6.1.... There is an entry in \n`/etc/snmp/snmp.conf` that prevents that from happening. Comment out the line that\ncontains `mibs:`\n```\n# As the snmp packages come without MIB files due to license reasons, loading\n# of MIBs is disabled by default. If you added the MIBs you can reenable\n# loading them by commenting out the following line.\nmibs :\n```\n\n### Preferred Installation <a name=\"preferred-installation\"></a>\nA script, `install.sh`, is included to manage the installation process. It allows for\ninstallation of a pre compiled binary or building from source. It also allows for\nupgrading and uninstalling. See the additional notes for [Raspberry Pi 4](#rpibuild).\n\nCheck out install.sh to see what the script is doing.  \n\n```bash\n$ git clone https://github.com/lebogan/snob.git\n$ cd snob\n$ ./install.sh\n```\n\n### Manual Installation (if you gotta!)\n___Note: not for Raspberry Pi!___  \nA Makefile is included for compiling and installing the binary and man pages.\nCrystal is required to be preinstalled. The binary is copied to `/usr/local/bin`.\nThe Makefile also provides for uninstalling and compliation cleanup. The compiled\nbinary is in `./bin`. Make also builds and installs man pages as necessary to\n`/usr/local/share`.\n\n```bash\n$ git clone https://github.com/lebogan/snob.git\n$ cd snob\n$ shards install\n$ make clean\n$ make\n$ sudo make install\n```\n#### RPM-based (RedHat) and other distributions\n> The source will have to be recompiled with Crystal.  \n> From the website, [crystal-lang](https://crystal-lang.org/install/)  \n> See [Preferred Installation](#preferred-installation)\n\n#### Debian 9\n> Install Crystal [crystal-lang](https://crystal-lang.org/install/)  \n> Install git and curl   \n> Install libyaml-dev  \n> Install apt-transport-https, dirmngr  \n> For snmp, add to file: /etc/apt/sources.list\n>```text\n>deb http://ftp.br.debian.org/debian/ wheezy main contrib non-free\n>deb-src http://ftp.br.debian.org/debian/ wheezy main contrib non-free\n>```\n\n\n## Usage\n```bash\n$ snob --help\nUsage: snob [OPTIONS] [HOST]\nBrowse a host's snmpv3 mib tree.\n\nPrompts for HOST if not specified on the command-line. Also, prompts\nfor security credentials if HOST is not in the config file, snobrc.yml.\n\n    -l, --list                       List some pre-defined OIDs\n    -m OID, --mib=OID                Display information for this oid\n                                     (Default: system)\n    -d, --dump                       Write output to file, raw only\n    -e, --edit                       Edit global config file\n    -f, --formatted                  Display as formatted table\n    -o, --only-values                Display values only (not OID = value)\n    -h, --help                       Show this help\n    -v, --version                    Show version\n\n$ snob --list\n===================================================================\nOIDS - Included pre-defined flag names\n-------------------------------------------------------------------\nflag name        |oid name\n=================+=================================================\narp              |ipNetToPhysicalPhysAddress\n-----------------+-------------------------------------------------\nlldp             |1.0.8802.1.1.2.1.4.1.1.9\n-----------------+-------------------------------------------------\nsys              |system\n-----------------+-------------------------------------------------\nmem              |memory\n-----------------+-------------------------------------------------\ndsk              |dskTable\n-----------------+-------------------------------------------------\nifdesc           |ifDescr\n-----------------+-------------------------------------------------\ndistro           |ucdavis.7890.1.4\n-----------------+-------------------------------------------------\ntemp             |lmTempSensorsDevice\n-----------------+-------------------------------------------------\n```\n## Config file\nA first run will create a default YAML config file named **~/.snob/snobrc.yml**\nif it doesn't already exist. The directory's permissions are set to 0o700\n(drwx------) for added security. The initial set of credentials is for a host named\n__dummy__. Afterwards, if the host is not in the config file, you will be asked\nto enter credentials manually with the option to save them.  \n```\n$ snob myserver\nConfig file doesn't exist. Create it(Y/n)? <Default: Yes>\n'myserver' is not in config file. Configuring...\n-----------------------------------------------\nEnter security name: <myname>\nEnter authentication phrase: <secret>\nEnter privacy phrase: <realsecret>\nAuthentication: [MD5/SHA]: Default: SHA\nCrypto algorithm [AES/DES]: Default: DES\n-----------------------------------------------\nSave these credentials(Y/n)? <Default: Yes>\n```\n\nThe config file is YAML format and can be edited manually.\n```text\n# /home/<user>/.snob/snobrc.yml\n---\ndummy:\n  user: username\n  auth_pass: auth passphrase\n  priv_pass: priv passphrase\n  auth: MD5/SHA\n  crypto: AES/DES\n\n\nmyserver:\n  user: myname\n  auth: secret\n  priv: realsecret\n  auth: MD5\n  crypto: DES\n```\n\n## TODO\n- [X] Add ability to do on-the-fly editing of config file using default system editor.\n- [ ] Replace reliance on external snmpwalk to make this app even more portable.  \n- [ ] Add build for Raspberry Pi Model 4\n\n## Development\n[Please, see the DISCLAIMER below](#disclaimer)  \nCheck out the repo on GitHub at https://github.com/lebogan/snob.git  \n\n\n## Contributing\nPlease, see the DISCLAIMER below.\n\n1. Fork it ( https://github.com/[your-github-name]/snob/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n- [lebogan](https://github.com/lebogan/snob.git) - creator, maintainer\n\n## License\nThis utility is available as open source under the terms of the\n[MIT License](http://opensource.org/licenses/MIT).\n\n## Disclaimer <a name=\"disclaimer\"></a>\nThis utility was originally created for my personal use in my work as a network\nspecialist. Developed using Crystal 0.35.1 on Ubuntu 18.04 virtual workstation running under Vagrant v2.2.5 with VirtualBox 6.0 provider.  \n\n\nI am not a professional software developer nor do I pretend to be. I am a retired IT \nnetwork specialist and this is a hobby to keep me out of trouble. If you \nuse this application and it doesn't work the way you would want, feel free to \nfork it and modify it to your liking. Fork on GitHub at https://github.com/lebogan/snob.git\n\n### Raspberry Pi (Raspberry Pi OS, Raspian 10)<a name=\"rpibuild\"></a>\nSee [Preferred Installation](#preferred-installation). The binary has to be cross-compiled for the ARMv7 architecture.  \n\nI have tested on a Raspberry Pi 4 Model B Rev 1.1 ARMv7 (4gb) running Raspian 10 and Crystal 0.33.1 and a Raspberry Pi 4 Model B Rev 1.4 ARMv7 (8gb) running Raspian 10, no llvm, no Crystal. Both work well.\n\n> An object file, `snob.o` is included to aid in the cross-compiling effort.\n> These files are required: `libpcre3-dev, libgc-dev, libyaml-dev, libreadline-dev, libevent-dev`.\n> The install script will build a file, `libcrystal.a` and then build the binary\n> from the object file.  \n> For the snmp stuff, `snmp, snmpd, snmp-mibs-downloader, libsnmp-dev`, are needed.\n> In addition, the `mibs:` line in `/etc/snmp/snmp.conf` needs to be commented out.\n","program":{"html_id":"snob/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snob","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONFIG_FILE","name":"CONFIG_FILE","value":"File.expand_path(\"#{CONFIG_PATH}/snobrc.yml\")","doc":null,"summary":null},{"id":"CONFIG_PATH","name":"CONFIG_PATH","value":"File.expand_path(\"#{ENV[\"HOME\"]}/.snob\")","doc":null,"summary":null},{"id":"FORMATTED_PAGE_SIZE","name":"FORMATTED_PAGE_SIZE","value":"15","doc":null,"summary":null},{"id":"OIDLIST","name":"OIDLIST","value":"{arp: \"ipNetToPhysicalPhysAddress\", lldp: \"1.0.8802.1.1.2.1.4.1.1.9\", sys: \"system\", mem: \"memory\", dsk: \"dskTable\", ifdesc: \"ifDescr\", distro: \"ucdavis.7890.1.4\", temp: \"lmTempSensorsDevice\", hp_desc: \"enterprises.11.2.14.11.1.2.4.1.4.1\"}","doc":null,"summary":null},{"id":"OUT_FILE","name":"OUT_FILE","value":"File.expand_path(\"#{OUT_PATH}/raw_dump.txt\")","doc":null,"summary":null},{"id":"OUT_PATH","name":"OUT_PATH","value":"File.expand_path(\"#{ENV[\"HOME\"]}/tmp\")","doc":null,"summary":null},{"id":"RAW_PAGE_SIZE","name":"RAW_PAGE_SIZE","value":"20","doc":null,"summary":null},{"id":"SEPERATOR","name":"SEPERATOR","value":"\"-------------------+-------------------------------------------------\"","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"{{ (`shards version /home/vagrant/projects/production/crystal/snob/src`).chomp.stringify }}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snob/App","path":"App.html","kind":"class","full_name":"App","name":"App","abstract":false,"superclass":{"html_id":"snob/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"snob/Util","kind":"module","full_name":"Util","name":"Util"},{"html_id":"snob/Messages","kind":"module","full_name":"Messages","name":"Messages"},{"html_id":"snob/Session","kind":"module","full_name":"Session","name":"Session"},{"html_id":"snob/Config","kind":"module","full_name":"Config","name":"Config"},{"html_id":"snob/Snmp","kind":"module","full_name":"Snmp","name":"Snmp"},{"html_id":"snob/Helpers","kind":"module","full_name":"Helpers","name":"Helpers"},{"html_id":"snob/Reports","kind":"module","full_name":"Reports","name":"Reports"},{"html_id":"snob/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"snob/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"snob/Config","kind":"module","full_name":"Config","name":"Config"},{"html_id":"snob/Helpers","kind":"module","full_name":"Helpers","name":"Helpers"},{"html_id":"snob/Messages","kind":"module","full_name":"Messages","name":"Messages"},{"html_id":"snob/Reports","kind":"module","full_name":"Reports","name":"Reports"},{"html_id":"snob/Session","kind":"module","full_name":"Session","name":"Session"},{"html_id":"snob/Snmp","kind":"module","full_name":"Snmp","name":"Snmp"},{"html_id":"snob/Util","kind":"module","full_name":"Util","name":"Util"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"This class contains the main application. It checks for command line arguments,\nvalid hostname, and snmpv3 credentials.","summary":"<p>This class contains the main application.</p>","class_methods":[{"id":"run(arguments=ARGV)-class-method","html_id":"run(arguments=ARGV)-class-method","name":"run","doc":"Processes command-line argments via ARGV.","summary":"<p>Processes command-line argments via ARGV.</p>","abstract":false,"args":[{"name":"arguments","doc":null,"default_value":"ARGV","external_name":"arguments","restriction":""}],"args_string":"(arguments = <span class=\"t\">ARGV</span>)","source_link":null,"def":{"name":"run","args":[{"name":"arguments","doc":null,"default_value":"ARGV","external_name":"arguments","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(arguments)).run"}}],"constructors":[{"id":"new(arguments:Array(String))-class-method","html_id":"new(arguments:Array(String))-class-method","name":"new","doc":"Creates a *new* method for App class.","summary":"<p>Creates a <em>new</em> method for App class.</p>","abstract":false,"args":[{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"Array(String)"}],"args_string":"(arguments : Array(String))","source_link":null,"def":{"name":"new","args":[{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(arguments)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":"Runs the main application.","summary":"<p>Runs the main application.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"mib_oid = \"system\"\ndisplay_formatted = false\nonly_values = false\nfile_write = false\nOptionParser.parse do |parser|\n  parser.banner = banner_message\n  parser.on(\"-l\", \"--list\", \"List some pre-defined OIDs\") do\n    list_oids(OIDLIST)\n    exit(0)\n  end\n  parser.on(\"-m OID\", \"--mib=OID\", \"Display information for this oid\\n                                     (Default: system)\") do |oid|\n    mib_oid = case\n    when OIDLIST.has_key?(oid)\n      OIDLIST[\"#{oid}\"]\n    when !oid.empty?\n      oid\n    else\n      \"\"\n    end\n  end\n  parser.on(\"-d\", \"--dump\", \"Write output to file, raw only\") do\n    file_write = true\n  end\n  parser.on(\"-e\", \"--edit\", \"Edit global config file\") do\n    edit_config_file(CONFIG_FILE)\n    exit(0)\n  end\n  parser.on(\"-f\", \"--formatted\", \"Display as formatted table\") do\n    display_formatted = true\n  end\n  parser.on(\"-o\", \"--only-values\", \"Display values only (not OID = value)\") do\n    only_values = true\n  end\n  parser.on(\"-h\", \"--help\", \"Show this help\") do\n    puts(parser)\n    exit(0)\n  end\n  parser.on(\"-v\", \"--version\", \"Show version\") do\n    puts(about)\n    exit(0)\n  end\n  parser.invalid_option do |flag|\n    abort(invalid_message(flag))\n  end\n  parser.missing_option do |flag|\n    abort(missing_message(flag))\n  end\nend\nhostname = check_for_host(arguments)\ncheck_for_config(CONFIG_PATH, CONFIG_FILE)\nif (File.exists?(CONFIG_FILE)) && ((check_credentials(CONFIG_FILE))[\"#{hostname}\"]? != nil)\n  creds = fetch_credentials(CONFIG_FILE, \"#{hostname}\")\nelse\n  creds = update_config_file(hostname)\nend\nhost_session = Snmp.new(creds[:user], creds[:auth_pass], creds[:priv_pass], creds[:auth], creds[:crypto])\noutput_format = only_values ? \"vq\" : \"QUsT\"\nstatus, results = host_session.walk_mib3(hostname, mib_oid, output_format)\nif status == 0\nelse\n  abort(snmp_message(hostname, mib_oid))\nend\ncase\nwhen display_formatted\n  show_formatted(hostname, results, mib_oid)\nwhen file_write\n  if Dir.exists?(OUT_PATH)\n  else\n    Dir.mkdir_p(OUT_PATH)\n  end\n  Util.write_file(OUT_FILE, results)\nelse\n  show_raw(results)\nend\n"}}],"macros":[],"types":[]},{"html_id":"snob/Config","path":"Config.html","kind":"module","full_name":"Config","name":"Config","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"snob/Config","kind":"module","full_name":"Config","name":"Config"}],"subclasses":[],"including_types":[{"html_id":"snob/App","kind":"class","full_name":"App","name":"App"}],"namespace":null,"doc":"Defines configuration file methods.","summary":"<p>Defines configuration file methods.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"build_config_file(config_file:String,conf:Hash)-instance-method","html_id":"build_config_file(config_file:String,conf:Hash)-instance-method","name":"build_config_file","doc":"Creates a new config file.","summary":"<p>Creates a new config file.</p>","abstract":false,"args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"},{"name":"conf","doc":null,"default_value":"","external_name":"conf","restriction":"Hash"}],"args_string":"(config_file : String, conf : Hash)","source_link":null,"def":{"name":"build_config_file","args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"},{"name":"conf","doc":null,"default_value":"","external_name":"conf","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(config_file, \"w\") do |file|\n  file.puts(\"# #{config_file}\")\n  YAML.dump(conf, file)\nend"}},{"id":"check_credentials(config_file:String):YAML::Any-instance-method","html_id":"check_credentials(config_file:String):YAML::Any-instance-method","name":"check_credentials","doc":null,"summary":null,"abstract":false,"args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"}],"args_string":"(config_file : String) : YAML::Any","source_link":null,"def":{"name":"check_credentials","args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"YAML::Any","visibility":"Public","body":"YAML.parse(File.read(config_file))"}},{"id":"check_for_config(config_path:String,config_file:String)-instance-method","html_id":"check_for_config(config_path:String,config_file:String)-instance-method","name":"check_for_config","doc":"Checks for existance of a config file and creates a dummy entry\n   if the user answers yes.","summary":"<p>Checks for existance of a config file and creates a dummy entry    if the user answers yes.</p>","abstract":false,"args":[{"name":"config_path","doc":null,"default_value":"","external_name":"config_path","restriction":"String"},{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"}],"args_string":"(config_path : String, config_file : String)","source_link":null,"def":{"name":"check_for_config","args":[{"name":"config_path","doc":null,"default_value":"","external_name":"config_path","restriction":"String"},{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if File.exists?(config_file)\nelse\n  Dir.mkdir_p(config_path, 448)\n  conf = {\"dummy\" => {user: \"username\", auth_pass: \"auth passphrase\", priv_pass: \"priv passphrase\", auth: \"MD5/SHA\", crypto: \"AES/DES\"}}\n  choice = @@prompt.yes?(\"Config file doesn't exist. Create it(Y/n)? \")\n  if choice\n    build_config_file(config_file, conf)\n  end\nend"}},{"id":"fetch_credentials(config_file:String,hostname:String)-instance-method","html_id":"fetch_credentials(config_file:String,hostname:String)-instance-method","name":"fetch_credentials","doc":null,"summary":null,"abstract":false,"args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"},{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"args_string":"(config_file : String, hostname : String)","source_link":null,"def":{"name":"fetch_credentials","args":[{"name":"config_file","doc":null,"default_value":"","external_name":"config_file","restriction":"String"},{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"creds = (YAML.parse(File.read(config_file)))[hostname]\n{user: creds[\"user\"].to_s, auth_pass: creds[\"auth_pass\"].to_s, priv_pass: creds[\"priv_pass\"].to_s, auth: creds[\"auth\"].to_s, crypto: creds[\"crypto\"].to_s}\n"}},{"id":"update_config_file(hostname:String)-instance-method","html_id":"update_config_file(hostname:String)-instance-method","name":"update_config_file","doc":"Adds new host to config file","summary":"<p>Adds new host to config file</p>","abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"args_string":"(hostname : String)","source_link":null,"def":{"name":"update_config_file","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(\"'#{hostname}' is not in config file. Configuring ...\")\nprint_chars('-', 60)\nconfig = Session::V3Session.new.configure_session\ncredentials = {hostname => config}.to_yaml.gsub(\"---\", \"\")\nprint_chars('-', 60)\nchoice = @@prompt.yes?(\"Save these credentials(Y/n)? \")\nif choice\n  Util.append_file(CONFIG_FILE, credentials)\nend\nconfig\n"}}],"macros":[],"types":[]},{"html_id":"snob/Helpers","path":"Helpers.html","kind":"module","full_name":"Helpers","name":"Helpers","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"snob/Helpers","kind":"module","full_name":"Helpers","name":"Helpers"}],"subclasses":[],"including_types":[{"html_id":"snob/App","kind":"class","full_name":"App","name":"App"}],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"edit_config_file(filename)-instance-method","html_id":"edit_config_file(filename)-instance-method","name":"edit_config_file","doc":"Runs the editor indicated by ENV[\"EDITOR\"], nano as default.\nRedirect the standard input, output and error IO of a process\nusing the IO of the parent process, Process::Redirect::Inherit.","summary":"<p>Runs the editor indicated by ENV[\"EDITOR\"], nano as default.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":""}],"args_string":"(filename)","source_link":null,"def":{"name":"edit_config_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Process.run(ENV.fetch(\"EDITOR\", \"nano\"), args: {\"#{filename}\"}, input: Process::Redirect::Inherit, output: Process::Redirect::Inherit, error: Process::Redirect::Inherit)"}},{"id":"resolve_host(host)-instance-method","html_id":"resolve_host(host)-instance-method","name":"resolve_host","doc":"Does a lookup of a host's ip address and returns it as a Socket::IPAddress\nobject. Raises an error if the hostname doesn't exist or can't be resolved.\nRemove the \":7\" part with `rstrip(\":7\")` to get just the ip address.\n\n```\nHelpers.resolve_host(\"example.com\")                   # => ip_address:7\nHelpers.resolve_host(\"example.com\").to_s.rstrip(\":7\") # => ip_address\n```\n","summary":"<p>Does a lookup of a host's ip address and returns it as a Socket::IPAddress object.</p>","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":""}],"args_string":"(host)","source_link":null,"def":{"name":"resolve_host","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"addrinfo = Socket::Addrinfo.resolve(domain: host, service: \"echo\", type: Socket::Type::DGRAM, protocol: Socket::Protocol::UDP)\naddrinfo.first?.try(&.ip_address)\n"}},{"id":"say_hey(hostname:String)-instance-method","html_id":"say_hey(hostname:String)-instance-method","name":"say_hey","doc":"Says hello to _hostname_.\n\n```\nHelpers.say_hey(\"myserver\") # => \"Hey, myserver!\"\n```\n","summary":"<p>Says hello to <em>hostname</em>.</p>","abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"args_string":"(hostname : String)","source_link":null,"def":{"name":"say_hey","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(\"Hey #{hostname}!\")"}}],"macros":[],"types":[]},{"html_id":"snob/Messages","path":"Messages.html","kind":"module","full_name":"Messages","name":"Messages","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"snob/Messages","kind":"module","full_name":"Messages","name":"Messages"}],"subclasses":[],"including_types":[{"html_id":"snob/App","kind":"class","full_name":"App","name":"App"}],"namespace":null,"doc":"Error and other messages.","summary":"<p>Error and other messages.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"about-instance-method","html_id":"about-instance-method","name":"about","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"about","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"snob v#{VERSION} [compiled with Crystal #{Crystal::VERSION}] (#{Util.date})\\n\\nCopyright (c) 2019 - #{Time.local.to_s(\"%Y\")} Lewis E. Bogan\\nThe MIT License (MIT); http://opensource.org/licences/MIT\\ncreater, maintainer: lebogan <lewis.bogan@comcast.net>\""}},{"id":"banner_message-instance-method","html_id":"banner_message-instance-method","name":"banner_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"banner_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Usage: snob [OPTIONS] [HOST]\\nBrowse a host's snmpv3 mib tree.\\n\\nPrompts for HOST if not specified on the command-line. Also, prompts\\nfor security credentials if HOST is not in the config file, snobrc.yml.\\n\""}},{"id":"blank_host_message-instance-method","html_id":"blank_host_message-instance-method","name":"blank_host_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"blank_host_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"snob: hostname can not be blank\""}},{"id":"copyright_message-instance-method","html_id":"copyright_message-instance-method","name":"copyright_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"copyright_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"\\nCopyright (c) 2019 - #{Time.local.to_s(\"%Y\")} Lewis E. Bogan\\nThe MIT License (MIT); http://opensource.org/licences/MIT\\ncreater, maintainer: lebogan <lewis.bogan@comcast.net>\""}},{"id":"invalid_message(flag:String)-instance-method","html_id":"invalid_message(flag:String)-instance-method","name":"invalid_message","doc":null,"summary":null,"abstract":false,"args":[{"name":"flag","doc":null,"default_value":"","external_name":"flag","restriction":"String"}],"args_string":"(flag : String)","source_link":null,"def":{"name":"invalid_message","args":[{"name":"flag","doc":null,"default_value":"","external_name":"flag","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"snob: invalid option -- '#{flag}'\\nTry 'snob --help' for more information.\""}},{"id":"missing_message(flag:String)-instance-method","html_id":"missing_message(flag:String)-instance-method","name":"missing_message","doc":null,"summary":null,"abstract":false,"args":[{"name":"flag","doc":null,"default_value":"","external_name":"flag","restriction":"String"}],"args_string":"(flag : String)","source_link":null,"def":{"name":"missing_message","args":[{"name":"flag","doc":null,"default_value":"","external_name":"flag","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Missing option argument: #{flag} OID\\nExample: snob -m lldp hostname\""}},{"id":"ping_message(hostname:String)-instance-method","html_id":"ping_message(hostname:String)-instance-method","name":"ping_message","doc":null,"summary":null,"abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"args_string":"(hostname : String)","source_link":null,"def":{"name":"ping_message","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"ping: #{hostname} is unreachable on this network\""}},{"id":"snmp_message(hostname:String,mib_oid:String)-instance-method","html_id":"snmp_message(hostname:String,mib_oid:String)-instance-method","name":"snmp_message","doc":null,"summary":null,"abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"mib_oid","doc":null,"default_value":"","external_name":"mib_oid","restriction":"String"}],"args_string":"(hostname : String, mib_oid : String)","source_link":null,"def":{"name":"snmp_message","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"mib_oid","doc":null,"default_value":"","external_name":"mib_oid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Error: cannot process this request because:\\n1. net-snmp-utils not installed or\\n2. host '#{hostname}' not snmpv3 enabled or\\n3. incorrect credentials used or\\n4. communication not permitted from this host or\\n5. unknown object identifier: '#{mib_oid}'.\\nTry 'snob --help' for more information.\""}}],"macros":[],"types":[]},{"html_id":"snob/Object","path":"Object.html","kind":"class","full_name":"Object","name":"Object","abstract":true,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Allows displaying object methods during development.","summary":"<p>Allows displaying object methods during development.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"methods-macro","html_id":"methods-macro","name":"methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{{ @type.methods.map do |__arg0|\n  __arg0.name.stringify\nend }}\n\n  \n"}}],"types":[]},{"html_id":"snob/Reports","path":"Reports.html","kind":"module","full_name":"Reports","name":"Reports","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"snob/App","kind":"class","full_name":"App","name":"App"}],"namespace":null,"doc":"Displays the results of a snmpwalk operation either raw or formatted.","summary":"<p>Displays the results of a snmpwalk operation either raw or formatted.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"capitalize!(string:String):String-instance-method","html_id":"capitalize!(string:String):String-instance-method","name":"capitalize!","doc":"Capitalizes only the first word in a string, leaving the rest untouched. This\npreserves the words I want capitalized intentionally.\n\n```\nMyutils.capitalize!(\"my dog has Fleas\") # => \"My dog has Fleas\"\n```","summary":"<p>Capitalizes only the first word in a string, leaving the rest untouched.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : String","source_link":null,"def":{"name":"capitalize!","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.build do |str|\n  (str << string[0].upcase) << string[1..string.size]\nend"}},{"id":"display_formatted_table(formatted_table:Hash|NamedTuple)-instance-method","html_id":"display_formatted_table(formatted_table:Hash|NamedTuple)-instance-method","name":"display_formatted_table","doc":"Displays the formatted table information, removes quotes from info string variable.","summary":"<p>Displays the formatted table information, removes quotes from info string variable.</p>","abstract":false,"args":[{"name":"formatted_table","doc":null,"default_value":"","external_name":"formatted_table","restriction":"Hash | NamedTuple"}],"args_string":"(formatted_table : Hash | NamedTuple)","source_link":null,"def":{"name":"display_formatted_table","args":[{"name":"formatted_table","doc":null,"default_value":"","external_name":"formatted_table","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"page_count = 1\nformatted_table.each do |label, info|\n  printf(\"%-18s |%s\\n\", label, info.delete(\"\\\"\"))\n  puts(SEPERATOR)\n  page_count = page_count + 1\n  if (page_count % FORMATTED_PAGE_SIZE) == 0\n    @@prompt.yes?(\"Continue?\") ? next : break\n  end\nend\nputs(\"\\n\")\n"}},{"id":"display_header(hostname:String,header:Tuple,oid:String)-instance-method","html_id":"display_header(hostname:String,header:Tuple,oid:String)-instance-method","name":"display_header","doc":"Displays the report header.","summary":"<p>Displays the report header.</p>","abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"Tuple"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"args_string":"(hostname : String, header : Tuple, oid : String)","source_link":null,"def":{"name":"display_header","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"Tuple"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"print_chars('=', 67)\nputs(\"#{hostname.upcase} - #{oid}\")\nprint_chars('-', 67)\nprintf(\"%-18s | %s\\n\", header[0], header[1])\nprint_chars('=', 67)\n"}},{"id":"display_raw_table(table:Array(String))-instance-method","html_id":"display_raw_table(table:Array(String))-instance-method","name":"display_raw_table","doc":"Displays the raw unformatted snmpwalk results.","summary":"<p>Displays the raw unformatted snmpwalk results.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Array(String)"}],"args_string":"(table : Array(String))","source_link":null,"def":{"name":"display_raw_table","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"page_count = 1\ntable.each do |entry|\n  puts(entry)\n  page_count = page_count + 1\n  if (page_count % RAW_PAGE_SIZE) == 0\n    @@prompt.yes?(\"Continue?\") ? next : break\n  end\nend\nputs(\"\\n\\n\")\n"}},{"id":"display_table(formatted_table:Hash,hostname:String,oid:String)-instance-method","html_id":"display_table(formatted_table:Hash,hostname:String,oid:String)-instance-method","name":"display_table","doc":"Displays header and formatted table information.","summary":"<p>Displays header and formatted table information.</p>","abstract":false,"args":[{"name":"formatted_table","doc":null,"default_value":"","external_name":"formatted_table","restriction":"Hash"},{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"args_string":"(formatted_table : Hash, hostname : String, oid : String)","source_link":null,"def":{"name":"display_table","args":[{"name":"formatted_table","doc":null,"default_value":"","external_name":"formatted_table","restriction":"Hash"},{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"header = format_header(oid)\ndisplay_header(hostname, header, oid)\ndisplay_formatted_table(formatted_table)\n"}},{"id":"format_header(oid:String):Tuple(String,String)-instance-method","html_id":"format_header(oid:String):Tuple(String,String)-instance-method","name":"format_header","doc":"Formats the appropriate oid header.","summary":"<p>Formats the appropriate oid header.</p>","abstract":false,"args":[{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"args_string":"(oid : String) : Tuple(String, String)","source_link":null,"def":{"name":"format_header","args":[{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(String, String)","visibility":"Public","body":"case\nwhen oid.includes?(\"1.0.8802.1.1.2.1.4.1.1.9\")\n  {\"port.instance\", \"remote host\"}\nwhen oid.includes?(\"ipNetToPhysicalPhysAddress\")\n  {\"ip address\", \"mac address\"}\nelse\n  {\"label\", \"value\"}\nend"}},{"id":"format_label(entry:String):String-instance-method","html_id":"format_label(entry:String):String-instance-method","name":"format_label","doc":"Formats the label depending on which oid it represents.","summary":"<p>Formats the label depending on which oid it represents.</p>","abstract":false,"args":[{"name":"entry","doc":null,"default_value":"","external_name":"entry","restriction":"String"}],"args_string":"(entry : String) : String","source_link":null,"def":{"name":"format_label","args":[{"name":"entry","doc":null,"default_value":"","external_name":"entry","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"label = (entry.split(\"=\"))[0].split(/\\\"/)\ncase\nwhen label[0].includes?(\"ipNetToPhysicalPhysAddress\")\n  label[-2].to_s\nwhen label[0].includes?(\"iso.0.8802.1.1.2.1.4.1.1.9\")\n  ((label[0].split(/\\./))[-2..-1].join(\".\")).to_s\nwhen label[0].includes?(\"ucdavis.7890.1.4\")\n  \"Linux distro\"\nwhen label[0].includes?(\"enterprises.11.2.14.11.1.2.4.1.4.1\")\n  \"hp switch desc\"\nelse\n  label[0].to_s\nend\n"}},{"id":"format_table(results:Array,table:Hash):Hash(String,String)-instance-method","html_id":"format_table(results:Array,table:Hash):Hash(String,String)-instance-method","name":"format_table","doc":"Formats the table into label and info.","summary":"<p>Formats the table into label and info.</p>","abstract":false,"args":[{"name":"results","doc":null,"default_value":"","external_name":"results","restriction":"Array"},{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Hash"}],"args_string":"(results : Array, table : Hash) : Hash(String, String)","source_link":null,"def":{"name":"format_table","args":[{"name":"results","doc":null,"default_value":"","external_name":"results","restriction":"Array"},{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"results.each do |entry|\n  if (entry.split(\"=\")).size > 1\n    label = format_label(entry)\n    info = (truncate((entry.split(\"=\"))[1])).to_s\n    table[label] = info\n  end\nend\ntable\n"}},{"id":"list_oids(list:NamedTuple)-instance-method","html_id":"list_oids(list:NamedTuple)-instance-method","name":"list_oids","doc":"Lists some useful difficult-to-remember oids.\n\n```text\n===================================================================\nOIDS - Included pre-defined object identifiers\n-------------------------------------------------------------------\nname             |object identifier\n=================+=================================================\narp              |ipNetToPhysicalPhysAddress\n-----------------+-------------------------------------------------\nlldp (switches)  |1.0.8802.1.1.2.1.4.1.1.9\n-----------------+-------------------------------------------------\n```","summary":"<p>Lists some useful difficult-to-remember oids.</p>","abstract":false,"args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"NamedTuple"}],"args_string":"(list : NamedTuple)","source_link":null,"def":{"name":"list_oids","args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Util.clear_screen\nheader = {\"friendly name\", \"object identifier\"}\ndisplay_header(\"OIDs\", header, \"Included pre-defined object identifiers\")\ndisplay_formatted_table(list)\n"}},{"id":"print_chars(character:Char=&#39;-&#39;,number:Int32=20)-instance-method","html_id":"print_chars(character:Char=&#39;-&#39;,number:Int32=20)-instance-method","name":"print_chars","doc":"Prints a line of characters for display formatting, defaults to 20 dashes.\n\n```\nHelpers.print_chars('*', 10) # => \"**********\"\nHelpers.print_chars          # => \"--------------------\"\n```\n","summary":"<p>Prints a line of characters for display formatting, defaults to 20 dashes.</p>","abstract":false,"args":[{"name":"character","doc":null,"default_value":"'-'","external_name":"character","restriction":"Char"},{"name":"number","doc":null,"default_value":"20","external_name":"number","restriction":"Int32"}],"args_string":"(character : Char = <span class=\"s\">&#39;-&#39;</span>, number : Int32 = <span class=\"n\">20</span>)","source_link":null,"def":{"name":"print_chars","args":[{"name":"character","doc":null,"default_value":"'-'","external_name":"character","restriction":"Char"},{"name":"number","doc":null,"default_value":"20","external_name":"number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts((\"%s\" % character) * number)"}},{"id":"punctuate!(string:String):String-instance-method","html_id":"punctuate!(string:String):String-instance-method","name":"punctuate!","doc":"Adds a period to the end of a string if no terminating punctuation (?, !, .)\nis present.\n\n```\nMyutils.punctuate!(\"let's end this\")  # => \"let's end this.\"\nMyutils.punctuate!(\"let's end this!\") # => \"let's end this!\"\nMyutils.punctuate!(\"let's end this?\") # => \"let's end this?\"\n```","summary":"<p>Adds a period to the end of a string if no terminating punctuation (?, !, .) is present.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : String","source_link":null,"def":{"name":"punctuate!","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case string\nwhen .ends_with?('.'), .ends_with?('?'), .ends_with?('!')\n  string\nelse\n  string.insert(-1, '.')\nend"}},{"id":"show_formatted(hostname,results,mib_oid)-instance-method","html_id":"show_formatted(hostname,results,mib_oid)-instance-method","name":"show_formatted","doc":null,"summary":null,"abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":""},{"name":"results","doc":null,"default_value":"","external_name":"results","restriction":""},{"name":"mib_oid","doc":null,"default_value":"","external_name":"mib_oid","restriction":""}],"args_string":"(hostname, results, mib_oid)","source_link":null,"def":{"name":"show_formatted","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":""},{"name":"results","doc":null,"default_value":"","external_name":"results","restriction":""},{"name":"mib_oid","doc":null,"default_value":"","external_name":"mib_oid","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Util.clear_screen\nsay_hey(hostname)\ntable = {} of String => String\nformat_table(results.split(\"\\n\"), table)\ndisplay_table(table, hostname, mib_oid)\n"}},{"id":"show_raw(results)-instance-method","html_id":"show_raw(results)-instance-method","name":"show_raw","doc":null,"summary":null,"abstract":false,"args":[{"name":"results","doc":null,"default_value":"","external_name":"results","restriction":""}],"args_string":"(results)","source_link":null,"def":{"name":"show_raw","args":[{"name":"results","doc":null,"default_value":"","external_name":"results","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Util.clear_screen\ndisplay_raw_table(results.split(\"\\n\"))\n"}},{"id":"truncate(text:String,length=48,trunc_string=&quot;...&quot;):String-instance-method","html_id":"truncate(text:String,length=48,trunc_string=&quot;...&quot;):String-instance-method","name":"truncate","doc":"Truncates a _text_ string longer than _length_ characters and prints\na _truncate_ _string_ (defaults to '...') in place of the removed text.\nDefaults to # 48 characters.\n\n```\nMyutils.truncate(\"hello, world\", 10, \"...\") # => hello, ...\n```\n","summary":"<p>Truncates a <em>text</em> string longer than <em>length</em> characters and prints a <em>truncate</em> <em>string</em> (defaults to '...') in place of the removed text.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"48","external_name":"length","restriction":""},{"name":"trunc_string","doc":null,"default_value":"\"...\"","external_name":"trunc_string","restriction":""}],"args_string":"(text : String, length = <span class=\"n\">48</span>, trunc_string = <span class=\"s\">&quot;...&quot;</span>) : String","source_link":null,"def":{"name":"truncate","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"48","external_name":"length","restriction":""},{"name":"trunc_string","doc":null,"default_value":"\"...\"","external_name":"trunc_string","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"text.size > length ? \"#{text[0...(length - trunc_string.size)]}#{trunc_string}\" : text"}}],"macros":[],"types":[]},{"html_id":"snob/Session","path":"Session.html","kind":"module","full_name":"Session","name":"Session","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"snob/App","kind":"class","full_name":"App","name":"App"}],"namespace":null,"doc":" Defines session methods.","summary":"<p>Defines session methods.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snob/Session/V3Session","path":"Session/V3Session.html","kind":"class","full_name":"Session::V3Session","name":"V3Session","abstract":false,"superclass":{"html_id":"snob/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"snob/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"snob/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snob/Session","kind":"module","full_name":"Session","name":"Session"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"configure_session-instance-method","html_id":"configure_session-instance-method","name":"configure_session","doc":"Prompts the user for host credentials. This method is typically invoked\nwhen the credentials are not in the configuration file.\n```\nconfigure_session # => NamedTuple(user: String, auth: String, priv: String, crypto: String)\n```\n","summary":"<p>Prompts the user for host credentials.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"configure_session","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"creds = V3Credentials.new((@prompt.ask(\"Enter security name: \", required: true)).to_s, (@prompt.mask(\"Enter authentication phrase: \", required: true)).to_s, (@prompt.mask(\"Enter privacy phrase: \", required: true)).to_s, (@prompt.ask(\"Authentication: [MD5/SHA]\", default: \"SHA\")).to_s.upcase, (@prompt.ask(\"Crypto algorithm [AES/DES]: \", default: \"AES\")).to_s.upcase)\n{user: creds.user, auth_pass: creds.auth_pass, priv_pass: creds.priv_pass, auth: creds.auth, crypto: creds.crypto}\n"}}],"macros":[],"types":[]}]},{"html_id":"snob/Snmp","path":"Snmp.html","kind":"module","full_name":"Snmp","name":"Snmp","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"snob/App","kind":"class","full_name":"App","name":"App"}],"namespace":null,"doc":"Defines the Snmp object and forms the **walk_mib3** command string.","summary":"<p>Defines the Snmp object and forms the <strong>walk_mib3</strong> command string.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snob/Snmp/Snmp","path":"Snmp/Snmp.html","kind":"class","full_name":"Snmp::Snmp","name":"Snmp","abstract":false,"superclass":{"html_id":"snob/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"snob/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"snob/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snob/Snmp","kind":"module","full_name":"Snmp","name":"Snmp"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(user:String,auth_pass:String,priv_pass:String,auth:String,crypto:String)-class-method","html_id":"new(user:String,auth_pass:String,priv_pass:String,auth:String,crypto:String)-class-method","name":"new","doc":"Creates a new Snmp object for a walk session.\n\n```\nSnmp.new(args...) # => Snmp\n```\n","summary":"<p>Creates a new Snmp object for a walk session.</p>","abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"auth_pass","doc":null,"default_value":"","external_name":"auth_pass","restriction":"String"},{"name":"priv_pass","doc":null,"default_value":"","external_name":"priv_pass","restriction":"String"},{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"String"},{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":"String"}],"args_string":"(user : String, auth_pass : String, priv_pass : String, auth : String, crypto : String)","source_link":null,"def":{"name":"new","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"auth_pass","doc":null,"default_value":"","external_name":"auth_pass","restriction":"String"},{"name":"priv_pass","doc":null,"default_value":"","external_name":"priv_pass","restriction":"String"},{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"String"},{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(user, auth_pass, priv_pass, auth, crypto)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"auth:String-instance-method","html_id":"auth:String-instance-method","name":"auth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"auth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth"}},{"id":"auth=(auth)-instance-method","html_id":"auth=(auth)-instance-method","name":"auth=","doc":null,"summary":null,"abstract":false,"args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":""}],"args_string":"(auth)","source_link":null,"def":{"name":"auth=","args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth = auth"}},{"id":"auth_pass:String-instance-method","html_id":"auth_pass:String-instance-method","name":"auth_pass","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"auth_pass","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth_pass"}},{"id":"auth_pass=(auth_pass)-instance-method","html_id":"auth_pass=(auth_pass)-instance-method","name":"auth_pass=","doc":null,"summary":null,"abstract":false,"args":[{"name":"auth_pass","doc":null,"default_value":"","external_name":"auth_pass","restriction":""}],"args_string":"(auth_pass)","source_link":null,"def":{"name":"auth_pass=","args":[{"name":"auth_pass","doc":null,"default_value":"","external_name":"auth_pass","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth_pass = auth_pass"}},{"id":"crypto:String-instance-method","html_id":"crypto:String-instance-method","name":"crypto","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"crypto","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crypto"}},{"id":"crypto=(crypto)-instance-method","html_id":"crypto=(crypto)-instance-method","name":"crypto=","doc":null,"summary":null,"abstract":false,"args":[{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":""}],"args_string":"(crypto)","source_link":null,"def":{"name":"crypto=","args":[{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crypto = crypto"}},{"id":"priv_pass:String-instance-method","html_id":"priv_pass:String-instance-method","name":"priv_pass","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"priv_pass","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@priv_pass"}},{"id":"priv_pass=(priv_pass)-instance-method","html_id":"priv_pass=(priv_pass)-instance-method","name":"priv_pass=","doc":null,"summary":null,"abstract":false,"args":[{"name":"priv_pass","doc":null,"default_value":"","external_name":"priv_pass","restriction":""}],"args_string":"(priv_pass)","source_link":null,"def":{"name":"priv_pass=","args":[{"name":"priv_pass","doc":null,"default_value":"","external_name":"priv_pass","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@priv_pass = priv_pass"}},{"id":"user:String-instance-method","html_id":"user:String-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(user)-instance-method","html_id":"user=(user)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"args_string":"(user)","source_link":null,"def":{"name":"user=","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = user"}},{"id":"walk_mib3(hostname:String,oid:String,format:String):Tuple(Int32,String)-instance-method","html_id":"walk_mib3(hostname:String,oid:String,format:String):Tuple(Int32,String)-instance-method","name":"walk_mib3","doc":"Walks the mib tree branch.\n\n```\nSnmp.walk_mib3(\"myhost\", \"system\", \"vQ\") # => Tuple(Int32, String)\n```\n","summary":"<p>Walks the mib tree branch.</p>","abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"args_string":"(hostname : String, oid : String, format : String) : Tuple(Int32, String)","source_link":null,"def":{"name":"walk_mib3","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"oid","doc":null,"default_value":"","external_name":"oid","restriction":"String"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, String)","visibility":"Public","body":"Util.run_cmd(\"snmpwalk\", {\"-v3\", \"-u\", \"#{@user}\", \"-O#{format}\", \"-l\", \"authpriv\", \"-a\", \"#{auth}\", \"-A\", \"#{@auth_pass}\", \"-x\", \"#{@crypto}\", \"-X\", \"#{@priv_pass}\", \"#{hostname}\", \"#{oid}\"})"}}],"macros":[],"types":[]}]},{"html_id":"snob/Util","path":"Util.html","kind":"module","full_name":"Util","name":"Util","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"snob/App","kind":"class","full_name":"App","name":"App"}],"namespace":null,"doc":"===============================================================================\n        FILE:  util.cr\n       USAGE:  Internal\n DESCRIPTION:  General purpose utilities.\n      AUTHOR:  Lewis E. Bogan\n     COMPANY:  Earthsea@Home\n     CREATED:  2020-07-31 17:45\n   COPYRIGHT:  (C) 2020 Lewis E. Bogan <lewis.bogan@comcast.net>\nDistributed under terms of the MIT license.\n===============================================================================","summary":"<p>===============================================================================         FILE:  util.cr        USAGE:  Internal  DESCRIPTION:  General purpose utilities.</p>","class_methods":[{"id":"append_file(filename:String,content:String)-class-method","html_id":"append_file(filename:String,content:String)-class-method","name":"append_file","doc":"Opens _filename_ for appending _content_.\n\n```\nMyutils.append_file(\"path/test.txt\", \"Testing 1, 2, 3.\")\n```\n","summary":"<p>Opens <em>filename</em> for appending <em>content</em>.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"args_string":"(filename : String, content : String)","source_link":null,"def":{"name":"append_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(filename, \"a\") do |file|\n  file.puts(content)\nend"}},{"id":"ask_char(*args):Char?-class-method","html_id":"ask_char(*args):Char?-class-method","name":"ask_char","doc":"Gets a single character (no newline) for use in paging long displays\nand other single character prompts.\n\n```\nMyutils.ask_char(\"press 'q' to quit \") # => 'q'\n```\n\n```text\n$ press 'q' to quit _\n```\n","summary":"<p>Gets a single character (no newline) for use in paging long displays and other single character prompts.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args) : Char?","source_link":null,"def":{"name":"ask_char","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Char | ::Nil","visibility":"Public","body":"prompt_msg(args)\nSTDIN.raw(&.read_char)\n"}},{"id":"clear_screen-class-method","html_id":"clear_screen-class-method","name":"clear_screen","doc":"Clears the screen using ansi codes.\n\n```text\n\\e[ is the escape code\n2J clears the screen\n1;1H moves cursor to line 1, column 1\n```\n\n```text\nMyutils.clear_screen # => \"\\e[2J\\e[1;1H]]\"\n```\n","summary":"<p>Clears the screen using ansi codes.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"clear_screen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(IO::Memory.new << \"\\e[2J\\e[1;1H\")"}},{"id":"date-class-method","html_id":"date-class-method","name":"date","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"date","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"time = {{ ((env(\"SOURCE_DATE_EPOCH\")) || (`date +%s`)).to_i }}\n(Time.unix(time)).to_s(\"%Y-%m-%d\")\n"}},{"id":"prompt_msg(prompt:Tuple)-class-method","html_id":"prompt_msg(prompt:Tuple)-class-method","name":"prompt_msg","doc":"Displays prompt and cursor all on one line if prompt ends with a space,\notherwise displays prompt string, a newline, and then the cursor.\n\n```\nprompt_msg(\"Enter something: \") # => Nil\n```\n\n```text\n$ Enter something: _\n```\n","summary":"<p>Displays prompt and cursor all on one line if prompt ends with a space, otherwise displays prompt string, a newline, and then the cursor.</p>","abstract":false,"args":[{"name":"prompt","doc":null,"default_value":"","external_name":"prompt","restriction":"Tuple"}],"args_string":"(prompt : Tuple)","source_link":null,"def":{"name":"prompt_msg","args":[{"name":"prompt","doc":null,"default_value":"","external_name":"prompt","restriction":"Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prompt[0].ends_with?(\" \") ? print(*prompt) : puts(*prompt)"}},{"id":"read_file(filename:String):Array(String)-class-method","html_id":"read_file(filename:String):Array(String)-class-method","name":"read_file","doc":"Returns an array containing the contents of _filename_.\n\n```\nMyutils.read_file(\"./src/spec_helper.cr\") # => Array(String)\n```\n","summary":"<p>Returns an array containing the contents of <em>filename</em>.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Array(String)","source_link":null,"def":{"name":"read_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"File.read_lines(filename)"}},{"id":"run_cmd(cmd:String,args:Tuple={&quot;&quot;}):Tuple(Int32,String)-class-method","html_id":"run_cmd(cmd:String,args:Tuple={&quot;&quot;}):Tuple(Int32,String)-class-method","name":"run_cmd","doc":"Runs a system-level command and returns a Tuple(Int32, String) containing\nstatus, and command output or error. If _args_ is missing, it defaults to \"\".\n\n```\nstatus, result = Myutils.run_cmd(\"ls\", {\"-l\", \"-s\"}) # => 0, listing\n\nstatus, result = Myutils.run_cmd(\"ls\", {\"-ls\"}) # => 0, listing\n\nstatus, result = Myutils.run_cmd(\"ls\", [\"-ls\"]) # => 0, listing\n\nstatus, result = Myutils.run_cmd(\"junk\") # => 1, error-message about missing cmd.\n```\n","summary":"<p>Runs a system-level command and returns a Tuple(Int32, String) containing status, and command output or error.</p>","abstract":false,"args":[{"name":"cmd","doc":null,"default_value":"","external_name":"cmd","restriction":"String"},{"name":"args","doc":null,"default_value":"{\"\"}","external_name":"args","restriction":"Tuple"}],"args_string":"(cmd : String, args : Tuple = {<span class=\"s\">&quot;&quot;</span>}) : Tuple(Int32, String)","source_link":null,"def":{"name":"run_cmd","args":[{"name":"cmd","doc":null,"default_value":"","external_name":"cmd","restriction":"String"},{"name":"args","doc":null,"default_value":"{\"\"}","external_name":"args","restriction":"Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, String)","visibility":"Public","body":"stdout_str = IO::Memory.new\nstderr_str = IO::Memory.new\nstatus = Process.run(cmd, args: args, output: stdout_str, error: stderr_str)\nif status.success?\n  {status.exit_code, stdout_str.to_s}\nelse\n  {status.exit_code, stderr_str.to_s}\nend\n"}},{"id":"run_cmd(cmd:String,args:Array=[&quot;&quot;]):Tuple(Int32,String)-class-method","html_id":"run_cmd(cmd:String,args:Array=[&quot;&quot;]):Tuple(Int32,String)-class-method","name":"run_cmd","doc":"Overloads run_cmd taking an Array for _args_.","summary":"<p>Overloads run_cmd taking an Array for <em>args</em>.</p>","abstract":false,"args":[{"name":"cmd","doc":null,"default_value":"","external_name":"cmd","restriction":"String"},{"name":"args","doc":null,"default_value":"[\"\"]","external_name":"args","restriction":"Array"}],"args_string":"(cmd : String, args : Array = [<span class=\"s\">&quot;&quot;</span>]) : Tuple(Int32, String)","source_link":null,"def":{"name":"run_cmd","args":[{"name":"cmd","doc":null,"default_value":"","external_name":"cmd","restriction":"String"},{"name":"args","doc":null,"default_value":"[\"\"]","external_name":"args","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, String)","visibility":"Public","body":"stdout_str = IO::Memory.new\nstderr_str = IO::Memory.new\nstatus = Process.run(cmd, args: args, output: stdout_str, error: stderr_str)\nif status.success?\n  {status.exit_code, stdout_str.to_s}\nelse\n  {status.exit_code, stderr_str.to_s}\nend\n"}},{"id":"write_file(filename:String,content:String)-class-method","html_id":"write_file(filename:String,content:String)-class-method","name":"write_file","doc":"Opens _filename_ for writing. Creates it if it doesn't exist. Overwrites _content_.\n\n```\nMyutils.write_file(\"path/test.txt\", \"Testing 1, 2, 3.\")\n```\n","summary":"<p>Opens <em>filename</em> for writing.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"args_string":"(filename : String, content : String)","source_link":null,"def":{"name":"write_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(filename, \"w\") do |file|\n  file.puts(content)\nend"}}],"constructors":[],"instance_methods":[{"id":"check_for_host(argv)-instance-method","html_id":"check_for_host(argv)-instance-method","name":"check_for_host","doc":"Asks for a hostname if none is given on the command line.\n\n```\nHelpers.check_for_host # => String\n```\n","summary":"<p>Asks for a hostname if none is given on the command line.</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":""}],"args_string":"(argv)","source_link":null,"def":{"name":"check_for_host","args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hostname = process_argv(argv)\nbegin\n  resolve_host(\"#{hostname}\")\nrescue ex\n  abort(ex.message)\nend\nhostname\n"}},{"id":"process_argv(argv):String-instance-method","html_id":"process_argv(argv):String-instance-method","name":"process_argv","doc":"Checks for hostname in ARGV\n\n```\nHelpers.process_argv(\"myhost\") # => \"myhost\"\n```\n","summary":"<p>Checks for hostname in ARGV</p>","abstract":false,"args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":""}],"args_string":"(argv) : String","source_link":null,"def":{"name":"process_argv","args":[{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"prompt = Term::Prompt.new\nif argv.empty?\n  hostname = (prompt.ask(\"Enter hostname: \")).to_s\n  if hostname.blank?\n    abort(blank_host_message)\n  end\n  hostname\nelse\n  argv[0]\nend\n"}}],"macros":[],"types":[]},{"html_id":"snob/V3Credentials","path":"V3Credentials.html","kind":"struct","full_name":"V3Credentials","name":"V3Credentials","abstract":false,"superclass":{"html_id":"snob/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"snob/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"snob/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"snob/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snob","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"===============================================================================\n        FILE:  session.cr\n       USAGE:  Internal\n DESCRIPTION:  Defines session methods.\n      AUTHOR:  Lewis E. Bogan\n     COMPANY:  Earthsea@Home\n     CREATED:  2017-12-17 15:17\n   COPYRIGHT:  (C) 2017 Lewis E. Bogan <lewis.bogan@comcast.net>\nDistributed under terms of the MIT license.\n===============================================================================","summary":"<p>===============================================================================         FILE:  session.cr        USAGE:  Internal  DESCRIPTION:  Defines session methods.</p>","class_methods":[],"constructors":[{"id":"new(user:String,auth_pass:String,priv_pass:String,auth:String,crypto:String)-class-method","html_id":"new(user:String,auth_pass:String,priv_pass:String,auth:String,crypto:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"auth_pass","doc":null,"default_value":"","external_name":"auth_pass","restriction":"String"},{"name":"priv_pass","doc":null,"default_value":"","external_name":"priv_pass","restriction":"String"},{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"String"},{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":"String"}],"args_string":"(user : String, auth_pass : String, priv_pass : String, auth : String, crypto : String)","source_link":null,"def":{"name":"new","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"auth_pass","doc":null,"default_value":"","external_name":"auth_pass","restriction":"String"},{"name":"priv_pass","doc":null,"default_value":"","external_name":"priv_pass","restriction":"String"},{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"String"},{"name":"crypto","doc":null,"default_value":"","external_name":"crypto","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(user, auth_pass, priv_pass, auth, crypto)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"auth:String-instance-method","html_id":"auth:String-instance-method","name":"auth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"auth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@auth"}},{"id":"auth_pass:String-instance-method","html_id":"auth_pass:String-instance-method","name":"auth_pass","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"auth_pass","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@auth_pass"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@user.clone, @auth_pass.clone, @priv_pass.clone, @auth.clone, @crypto.clone)"}},{"id":"copy_with(user_user=@user,auth_pass_auth_pass=@auth_pass,priv_pass_priv_pass=@priv_pass,auth_auth=@auth,crypto_crypto=@crypto)-instance-method","html_id":"copy_with(user_user=@user,auth_pass_auth_pass=@auth_pass,priv_pass_priv_pass=@priv_pass,auth_auth=@auth,crypto_crypto=@crypto)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"@user","external_name":"user","restriction":""},{"name":"_auth_pass","doc":null,"default_value":"@auth_pass","external_name":"auth_pass","restriction":""},{"name":"_priv_pass","doc":null,"default_value":"@priv_pass","external_name":"priv_pass","restriction":""},{"name":"_auth","doc":null,"default_value":"@auth","external_name":"auth","restriction":""},{"name":"_crypto","doc":null,"default_value":"@crypto","external_name":"crypto","restriction":""}],"args_string":"(user _user = @user, auth_pass _auth_pass = @auth_pass, priv_pass _priv_pass = @priv_pass, auth _auth = @auth, crypto _crypto = @crypto)","source_link":null,"def":{"name":"copy_with","args":[{"name":"_user","doc":null,"default_value":"@user","external_name":"user","restriction":""},{"name":"_auth_pass","doc":null,"default_value":"@auth_pass","external_name":"auth_pass","restriction":""},{"name":"_priv_pass","doc":null,"default_value":"@priv_pass","external_name":"priv_pass","restriction":""},{"name":"_auth","doc":null,"default_value":"@auth","external_name":"auth","restriction":""},{"name":"_crypto","doc":null,"default_value":"@crypto","external_name":"crypto","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_user, _auth_pass, _priv_pass, _auth, _crypto)"}},{"id":"crypto:String-instance-method","html_id":"crypto:String-instance-method","name":"crypto","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"crypto","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@crypto"}},{"id":"priv_pass:String-instance-method","html_id":"priv_pass:String-instance-method","name":"priv_pass","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"priv_pass","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@priv_pass"}},{"id":"user:String-instance-method","html_id":"user:String-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@user"}}],"macros":[],"types":[]}]}}